---
title: "A Tidy Framework and Infrastructure to Systematically Assemble Spatio-temporal Indexes from Multivariate Data"
date: 2024-08-07
date-format: medium
author: 
 - name: "H. Sherry Zhang"
institute: "JSM 2024 Portland, Oregon"
# title-slide-attributes: 
#   data-background-size: "35%"
#   data-background-position: "75% 53%"
format: 
  revealjs:
    scrollable: true
    slide-number: true
    show-slide-number: all
    aspectratio: 169
    theme: serif
    preview-links: auto
    multiplex: true
    pdf-separate-fragments: true
    css: style.css
    footer: "https://sherryzhang-jsm2024.netlify.app"
execute:
  echo: true
self-contained: true
---

```{r setup, include=FALSE}
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE, 
                      message = FALSE, 
                      warning = FALSE,
                      fig.align = 'center')
library(tidyverse)
library(tidyindex)
library(lmomco)
library(lubridate)
library(SPEI)
library(GGally)
library(patchwork)
library(tsibble)
library(lubridate)
```

## Indexes

::: r-stack
![](figures/indexes.png){.fragment height="600"}

![](figures/wrong-way-go-back.png){.fragment height="450"}
:::

::: notes
Indexes are very commonly used to reduce multivariate information into a single number for problems such as monitoring climate, economy, health and social progress.

Initially we are intend to study how different indexes combine multivariate information, after reading the literature on drought indexes, we find it interesting when looking at the pipeline of how these indexes are computed
:::

## [Sport climbing in the Olympic Games `r emo::ji("climber")`]{.r-fit-text} {.smaller}

*2020 Tokyo version*

::: {layout-ncol="3"}
![Boulder: 4m wall, 3 problems in final](figures/climbing-boulder.jpeg){height="90%"}

![Lead: 15m wall, 1 problem](figures/climbing-lead.jpeg){height="90%"}

![Speed: 15m wall, always the same](figures/climbing-speed.jpeg){height="70%"}
:::

## Three disciplines, one gold medal {.smaller}

In Tokyo 2020, athletes are ranked from 1 to 8 (top - bottom) in each discipline. The final score is the multiplication of the ranks in each discipline.


| Athletes            | Country  | Speed | Boulder | Lead | Total | Rank |
|---------------------|----------|-------|---------|------|-------|------|
| Janja Garnbret      | Slovenia | 5     | 1       | 1    | 5     | 1    |
| Miho Nonaka         | Japan    | 3     | 3       | 5    | 45    | 2    |
| Akiyo Noguchi       | Japan    | 4     | 4       | 4    | 64    | 3    |
| Aleksandra Miroslaw | Poland   | 1     | 8       | 8    | 64    | 4    |
| ...                 | ...      | .     | .       | .    | ..    | ..   |

. . .

Aleksandra Miroslaw gets 4th despite ranked last in both boulder and lead: 

  - 0/3 in boulder problems (0T0Z)
  - scored 9/40 points in the lead (as compared to others: 13, 20, 21, 29, 34, 35, 37)

But she could win a medal if she performs better in the qualification round.

## [Hence this year, sport climbing has two medals]{.r-fit-text} {.smaller}

  - speed +  boulder and lead combined
  - boulder-and-lead combined has 200 points, each discipline worth 100 points:
      - boulder: 25 points x 4 problems, partial points of 5 and 10 for zone 1 and zone2
      - lead: counting from the top, the last 10 moves - 4 points each, the previous 10 moves - 3 points each, ... (4 x 10 + 3 x 10 + 2 x 10 + 10 = 100)

. . .

The game is on this week, but 1/4am PT `r set.seed(1234); emo::ji("sad")`...

## Inspired from tidymodel

::: r-stack
![](figures/tidymodel.png){.fragment height="500" width="1000"}

![](figures/recipes.png){.fragment height="500" width="800"}

![](figures/workflow.png){.fragment height="500" width="1000"}
:::

## [A closer look at a class of drought indexes]{.r-fit-text} {background-image="figures/index-overview.png" background-size="65%" background-position="50% 60%"}

::: notes
The most commonly used drought index is called SPI,

A huge collection of literature proposes drought indexes on top of SPI to improve the monitoring.

All these indexes resemble each other but they all implemented differently by different research groups.

It is similar to the situation that initially different machine learning methods are proposed by different research groups, and then tidymodel comes in to unite them all under the same workflow.

It would be nice if the pipeline to construct indexes look like this
:::

## The pipeline design (9 modules) {.smaller}

::: columns
::: column
*data with spatial (*$\mathbf{s}$) and temporal ($\mathbf{t}$) dimensions: $$x_j(s;t)$$

-   **Temporal processing**: $f[x_{sj}(t)]$
-   **Spatial processing**: $g[x_{tj}(s)]$

<br>

-   **Variable transformation**: $T[x_j(s;t)]$
-   **Scaling**: $[x_j(s;t)- \alpha]/\gamma$
:::

::: column
-   **Distribution fit**: $F[x_j(s;t)]$
-   **Normalising**: $\Phi^{-1}[x_j(s;t)]$

<br>

-   **Dimension reduction**: $h[\mathbf{x}(s;t)]$
-   **Benchmarking**: $u[x(s;t)]$
-   **Simplification**

```{=tex}
\begin{equation}
\begin{cases}
C_0 & c_1 \leq x(\mathbf{s};\mathbf{t}) < c_0 \\
C_1 & c_2 \leq x(\mathbf{s};\mathbf{t}) < c_1 \\
\cdots \\
C_z & c_z \leq x(\mathbf{s};\mathbf{t})
\end{cases}
\end{equation}
```
:::
:::

::: notes
In this project, we identify 9 modules that are used to construct indexes from literature in different domains.

We also develop software implementation for some of the modules. These are modules in the sense that there could be different ways to transform one variable into another, but they can also sit under the variable transformation module. In the next slide, I will mention an example of this.
:::

## Software design

```{r eval = FALSE, echo=TRUE}
DATA |>
  module1(...) |>
  module2(...) |>
  module3(...) |>
  ...

dimension_reduction(V1 = aggregate_linear(...))
dimension_reduction(V2 = aggregate_geometrical(...))
dimension_reduction(V3 = aggregate_manual(...))
```

The `aggregate_*()` function can be evaluated as a standalone recipe, before evaluated with the data in the dimension reduction module:

```{r eval = TRUE, echo=TRUE}
aggregate_manual(~x1 + x2)
```

## Pipeline for two drought indexes 

::: panel-tabset
### SPI

```{r}
#| eval: false
#| echo: true
data %>%                         # data contain `prcp`
  aggregate(                     # step 1: temporal aggregation
    .var = prcp,                 #         aggregate `prcp` with time scale
    .scale = .scale) %>%         #         to create `.agg`, by default
  dist_fit(.dist = .dist,        # step 2: distribution fit
           .method = "lmoms",    #         using L-moment to fit `.dist`
           .var = .agg) %>%      #         distribution on `.agg`
  augment(.var = .agg)           # step 3: normalising 
                                 #         find the normal density for `.agg`
```

### SPEI

```{r}
#| eval: false
#| echo: true
data %>%                                  # data contain `tavg` and `prcp`
  var_trans(                              # step 1: variable transformation
    .method = "thornthwaite",             #         using the thornthwaite function
    .vars = tavg,                         #         on `tavg` 
    .new_name = "pet") %>%                #         to create a new variable `pet` 
  dim_red(diff = prcp - pet) %>%          # step 2: dimension reduction 
  aggregate(                              # step 3: temporal aggregation
    .var = diff,                          #         aggregate `diff` with time scale
    .scale = .scale) %>%                  #         `.scale` to create `.agg`
  dist_fit(                               # step 4: distribution fit
    .dist = dist_gev(),                   #         use the gev distribution 
    .var = .agg,                          #         to fit the variable `.agg`
    .method = "lmoms") %>%                #         using L-moment        
  augment(.var = .agg)                    # step 5: normalising 
                                          #         find the normal density for `.agg`
```
:::

::: notes
What we built with the tidyindex package are the pieces aggregate for temporal aggregation, dist_fit for fitting distribution, and augment for normalising. Users can compose their indexes from the module developed. Also we provide some wrapper for commonly used indexes, for example, the SPI and SPEI with some default parameters.
:::

## Confidence interval in the SPI {.smaller}

A bootstrap sample of 100 is taken from the aggregated precipitation series to estimate gamma parameters and to calculate the index SPI for the *Texas Post Office* station in Queensland.

::: columns
::: column
```{r}
texas <- queensland |> dplyr::filter(name == "TEXAS POST OFFICE") |> head(1)
queensland_map <- ozmaps::abs_ste |>  dplyr::filter(NAME == "Queensland") |> 
  rmapshaper::ms_simplify(keep = 0.02)
queensland_map |> 
  ggplot() +
  geom_sf(fill = "transparent", linewidth = 1) +
  geom_point(data = queensland |> dplyr::distinct(long, lat, name), 
             aes(x = long, y = lat), size = 3) +
  geom_point(data = texas, aes(x = long, y = lat),
             color = "orange", shape = 18, fill = "orange", size = 7) +  
  theme_void()
```
:::

::: column
```{r eval = FALSE, echo = TRUE}
DATA %>%
  # aggregate monthly precipitation 
  # with a 24-month window
  aggregate(
    .var = prcp, .scale = 24
    ) %>%
  # fit a gamma distribution to 
  # obtain the probability value
  # [0, 1]
  dist_fit(
    .dist = gamma(), .var = .agg, 
    .n_boot = 100
    ) %>%
  # use the inverse CDF to 
  # convert into z-score
  augment(.var = .agg)
```
:::
:::

## Confidence interval in the SPI {.smaller}

![80% and 95% confidence interval of the Standardized Precipitation Index (SPI-24) for the Texas post office station, in Queensland, Australia. The dashed line at SPI = -2 represents an extreme drought as defined by the SPI. Most parts of the confidence intervals from 2019 to 2020 sit below the extreme drought line and are relatively wide compared to other time periods. This suggests that while it is certain that the Texas post office is suffering from a drastic drought, there is considerable uncertainty in quantifying its severity, given the extremity of the event.](figures/fig-conf-interval-1.png){width="1000" height="300"}


## Global Gender Gap Index{.smaller background-image="figures/gggi-weight.png" background-size="50%" background-position="90% 55%"}

::: {layout-ncol="2"}
![](figures/gggi.png){height="600," width="400"}
:::

##  {background-image="figures/idx-tour-static.png" background-size="55%" background-position="right"}

::: columns
::: {.column width="30%"}
![](figures/idx-tour.gif){width="100%"}
:::
:::

<!-- ## summary {.smaller} -->

<!-- A data pipeline comprising nine modules designed for the construction and analysis of indexes within the tidy framework. -->

<!-- Advantages? -->

<!-- -   quantify uncertainties, and -->
<!-- -   assess indexes’ robustness, -->

## `r emo::ji("link")` {.smaller }

-   this slide:
    -   {{< fa link >}}: <https://sherryzhang-jsm2024.netlify.app>
    -   {{< fa brands github >}}: <https://github.com/huizezhang-sherry/jsm2024>
-   the `tidyindex` package:
    -   {{< fa brands github >}}: <https://huizezhang-sherry.github.io/tidyindex/>
    -   CRAN: <https://cran.r-project.org/web/packages/tidyindex/index.html>
-   paper:
    -   Zhang, H. S., Cook, D., Laa, U., Langrené, N., & Menéndez, P. (2024). A Tidy Framework and Infrastructure to Systematically Assemble Spatio-temporal Indexes from Multivariate Data. *Journal of Computational and Graphical Statistics*, 1-19. <https://doi.org/10.1080/10618600.2024.2374960>
